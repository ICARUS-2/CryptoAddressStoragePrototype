@using CryptoAddressStorage.Models;
@using CryptoAddressStorage.Models.Entities;
@using CryptoAddressStorage.Services;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<IdentityUser> UserManager;
@inject ISiteRepository Repository; 
@model ProfileViewModel; 

<h1>@Model.IdentityUser.UserName's Profile</h1>

<br />

<div class="header">
    <h2>Addresses &nbsp;</h2>
</div>

<div class="friend-status">
    @{ 
        var user = await UserManager.GetUserAsync(User);

        //Current user is friends with profile user
        if (Repository.CheckFriendship(user.Id, Model.IdentityUser.Id))
        {
            <a class="btn btn-danger">Remove Friend</a>
        }
        //Current user sent profile user pending friend request
        else if (Repository.CheckPendingFriendRequest(user.Id, Model.IdentityUser.Id))
        {
            <a class="btn btn-warning">Cancel friend request</a>
        }
        //Profile user sent current user pending friend request
        else if (Repository.CheckPendingFriendRequest(Model.IdentityUser.Id, user.Id))
            {

            }
    }

</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Coin</th>
            <th>Address Type</th>
            <th>Access Level</th>
            <th>Current Balance</th>
        </tr>
    </thead>
    <tbody>
        @foreach (CryptoAddress addy in Model.Addresses)
        {
        <tr>
            <td>@addy.Title</td>
            <td style="max-width:300px; word-wrap: break-word">@addy.PublicKey</td>
            <td>@addy.Coin</td>
            <td>@addy.Format</td>
            @{
                string accessStyling = "";
                switch (addy.AccessLevel)
                {
                    case "Private":
                        accessStyling = "danger";
                        break;

                    case "FriendsOnly":
                        accessStyling = "warning";
                        break;

                    case "Public":
                        accessStyling = "success";
                        break;
                }

                <td class="text-@accessStyling">@addy.AccessLevel</td>
            }
            <td>@addy.Balance</td>
        </tr>
        }
    </tbody>
</table>